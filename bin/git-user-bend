#!/usr/bin/env php

<?php

$autoloaded = false;
$autoloads = [
    __DIR__ . '/../../../autoload.php',
    __DIR__ . '/../vendor/autoload.php',
    __DIR__ . '/vendor/autoload.php',
];

foreach ($autoloads as $autoload) {
    if (file_exists($autoload)) {
        require $autoload;
        $autoloaded = true;
        break;
    }
}

if (false === $autoloaded) {
   echo('You need to set up the project dependencies by running the following command:' . PHP_EOL .
       '> composer install' . PHP_EOL);
   exit(1);
}

use Stolt\GitUserBend\Commands\UnpairCommand;
use Stolt\GitUserBend\Git\Repository;
use Stolt\GitUserBend\Persona\Storage;
use Stolt\GitUserBend\Helpers\Str as OsHelper;
use Stolt\GitUserBend\Commands\AddCommand;
use Stolt\GitUserBend\Commands\ExportCommand;
use Stolt\GitUserBend\Commands\ImportCommand;
use Stolt\GitUserBend\Commands\PairCommand;
use Stolt\GitUserBend\Commands\PersonasCommand;
use Stolt\GitUserBend\Commands\RetireCommand;
use Stolt\GitUserBend\Commands\UseCommand;
use Stolt\GitUserBend\Commands\WhoamiCommand;
use Symfony\Component\Console\Application;

if ((new OsHelper())->isWindows()) {
    $homeDiretory = getenv('userprofile');
} else {
    $homeDiretory = getenv('HOME');
}

define('HOME_DIRECTORY', $homeDiretory);
define('WORKING_DIRECTORY', getcwd());
define('VERSION', '1.5.0');
define(
    'STORAGE_FILE',
    HOME_DIRECTORY . DIRECTORY_SEPARATOR . Storage::FILE_NAME
);

$application = new Application('Git user bend', VERSION);

$storage = new Storage(STORAGE_FILE);
$repository = new Repository(WORKING_DIRECTORY);

$application->add(new AddCommand($storage));
$application->add(new ImportCommand($storage, $repository));
$application->add(new ExportCommand($storage, $repository));
$application->add(new PairCommand($storage, $repository));
$application->add(new UnpairCommand($repository));
$application->add(new PersonasCommand($storage));
$application->add(new RetireCommand($storage));
$application->add(new UseCommand($storage, $repository));
$application->add(new WhoamiCommand($storage, $repository));

$application->run();
